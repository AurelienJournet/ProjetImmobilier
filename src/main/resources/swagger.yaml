swagger: "2.0"
info:
  description: "This is a sample server Petstore server.  You can find out more about     Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).      For this sample, you can use the api key `special-key` to test the authorization     filters."
  version: "beta"
  title: "ProjetImmobilier"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "apiteam@swagger.io"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "localhost:8081"
basePath: "/api"
tags:
- name: "BienController"
  description: "Le controller pour les objets Bien"
- name: "AgentController"
  description: "Le controller pour les objets Agents"
- name: "ClientController"
  description: "Le controller pour les objets Clients"
schemes:
- "http"
paths:
  /bien/save:
    post:
      tags:
      - "BienController"
      summary: "Add a new bien in the DB"
      description: ""
      operationId: "addBien"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Bien object that needs to be added to the store"
        required: true
        schema:
          $ref: "#/definitions/BienDTO"
      responses:
        200:
          description : "successfull"
          schema:
            type: "object"
            items:
              $ref: "#/definitions/BienResponse"
        405:
          description: "Invalid input"
  /bien/update:      
    put:
      tags:
      - "BienController"
      summary: "Update an existing bien"
      description: ""
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Bien object that needs to be added to the store"
        required: true
        schema:
          $ref: "#/definitions/BienDTO"
      responses:
        200:
          description : "successfull"
        400:
          description: "Invalid ID supplied"
        404:
          description: "Pet not found"
        405:
          description: "Validation exception"
  /bien/{id}/delete:
    get:
      tags:
      - "BienController"
      summary: "Delete by Id"
      description: "Delete bien by its Id"
      operationId: "delete"
      produces:
      - "application/json"
      parameters:
      - in: "path"
        name: "id"
        description: "Value of id"
        required: true
        type: "integer"
      responses:
        200:
          description : "successfull"
        400:
          description: "Invalid status value"
  /bien/etatVente:      
    post:
      tags:
      - "BienController"
      summary: "Update value of vendu for an existing bien"
      description: ""
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Value of id and new state of vendu"
        required: true
        schema:
          $ref: '#/definitions/BienDTOVendu'
      responses:
        200:
          description : "successfull"
        400:
          description: "Invalid ID supplied"
        404:
          description: "Pet not found"
        405:
          description: "Validation exception"
  /bien/getById:
    get:
      tags:
      - "BienController"
      summary: "Get By Id"
      description: "Recherche le bien grace Ã  son Id"
      operationId: "findBiensByStatus"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "query"
        description: "Valeur de l'id"
        required: true
        type: "integer"
      responses:
        200:
          description : "successfull"
        400:
          description: "Invalid status value"
  /bien/getAll:
    get:
      tags:
      - "BienController"
      summary: "GetAll biens"
      description: "Affiche tous les biens de la BDD"
      operationId: "findAll"
      produces:
      - "application/json"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/BienResponse"
        400:
          description: "Invalid status value"
  
definitions:
  BienDTO:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      prix:
        type: "integer"
        format: "int32"
      vendu:
        type: "boolean"
  BienDTOVendu:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      vendu:
        type: "boolean"
  BienResponse:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      prix:
        type: "integer"
        format: "int32"
      vendu:
        type: "boolean"
externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"